############################################
#
# Buildout Configuration File for ZEO Plone
# -----------------------------------------
#
# After making changes in this configuration file,
# you should run bin/buildout to update the components.
#
# ALWAYS back up all Plone/Zope data and components
# before changing configuration.
#
# Running "bin/buildout" will update your installation,
# installing missing components as necessary.
#
# Use "bin/buildout -n" to update many components here to the newest
# available releases.
# This will update the add-on products you've added in the eggs= lines.
# This will not, however, upgrade Plone itself (or anything else you've
# pinned with a version specification). To upgrade Plone itself, see the
# comments in "Plone Component Versions".
#
# Tutorial instructions for using zc.buildout for
# configuration management are available at:
# http://plone.org/documentation/tutorial/buildout
# Full details at http://pypi.python.org/pypi/zc.buildout
#
############################################


[buildout]
extensions +=
    mr.developer
auto-checkout = *
############################################
# Plone Component Versions
# ------------------------
# This version of the Unified Installer has the components of Plone 4
# preloaded so that it can install without an Internet connection.
# If you want to update, uncomment the "http://..." line below,
# edit it to point to the current version URL, comment out the
# "versions.cfg" line and run "bin/buildout" while attached to the
# Internet. Generally, you only want to do that as part of a planned migration.
# Note that if you are updating components, you should also check the versions
# section at the end of this file, since recipes or components other than
# those of Zope and Plone may need updating at the same time.
#
extends =
    base.cfg
    http://dist.plone.org/release/4.3.3/versions.cfg
	https://raw.github.com/plone/plone.app.widgets/master/versions.cfg
    haproxy_varnish.cfg
    versions.cfg

versions=versions


# If you change your Plone version, you'll also need to update
# the repository below.
find-links +=
    http://dist.plone.org/release/4.3.3

extensions += mr.developer

############################################
# Ports
# -----
# Specify the ports on which your Zope installation
# will listen.
# ZEO Server
zeo-address = 127.0.0.1:58100
# Zope client 1
http-address = 58079
# Additional clients:
client2-address = 58081
client3-address = 58082
client4-address = 58083
client5-address = 58084
haproxy-port = 58075
varnish-port = 58076


# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = istanze


############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include.
#

eggs =
	ZopeSkel < 3.0dev
	Paste
	PasteDeploy
	PasteScript
	zopeskel.dexterity

    Plone
    Pillow
	plone.api	
	plone.app.contenttypes
	plone.app.relationfield
	z3c.form
	plone.app.widgets[archetypes,dexterity]
#### Workflow #####
	Products.DCWorkflowGraph
	collective.wtf
	plone.app.workflowmanager
	
	Products.CMFPlomino
#### portale con utenti su postgres ##########
    psycopg2
    SQLAlchemy
    z3c.saconfig
    z3c.sqlalchemy
    zope.sqlalchemy
    Products.SQLAlchemyDA
    pas.plugins.sqlalchemy
	   
#### estensione utenti ###########
#    plone.app.users
#    collective.examples.userdata
##### pacchetto IOL ??? ##############
    collective.portletpage
    gisweb.iol
    iol.desktop
#### stampa pdf (installare phantomjs) ######
	collective.wkpdfview 

   
############################################
# Optional Functionality
# ----------------------
# Uncomment the indented lines to include these products.
# Documentation on all of them, along with many more products,
# is available at
# http://plone.org/products/
#
# Example products:
# * LinguaPlone provides tools for building multi-lingual sites
# * PloneFormGen provides through-the-web form building
#
#    Products.LinguaPlone==4.0.1
#    Products.PloneFormGen==1.6.0
#
# Note that versions may be specified here or in the [versions]
# section below. You should always specify versions that you know
# are compatible with the Plone release and at an acceptable
# development level.
#
# Commonly used development tools:
# Several excellent development tools are included in the develop.cfg
# buildout extension. Read it to learn how to activate these tools.


############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. Eggs with names beginning with "Products."
# usually don't need this.
zcml =	
	plone.app.widgets
############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
	src/iol.desktop
############################################
# Debug Mode
# ----------
# Change debug-mode to "on" to run in development mode.
#
debug-mode = off
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off


############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir=${buildout:directory}/var


############################################
# Environment Variables
# ---------------------
# Some of the behavior of your Zope/Plone instances are controlled with OS
# environment variables. You may set those here in a key / value format.
# Some common settings:
#    * TZ allows you to set a time zone for systems where it's not
#      automatically available.
#    * zope_i18n_compile_mo_files allows for automatic compilation of
#      missing translation files (may slow startup).
#    * zope_i18n_allowed_languages allows you to limit the available
#      translations.
#    * PYTHON_EGG_CACHE determines where zipped python packages are unpacked
#      for use.
#    * PYTHONHASHSEED determines initial seed for hashes. "random" causes a
#      pseudo-random value is used to seed the hashes of str, bytes and datetime
#      objects.
#  REMEMBER TO UPDATE THOSE VALUES IN ${supervisor:supervisord-environment} too **************
environment-vars =
    zope_i18n_compile_mo_files true
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    PYTHONHASHSEED random
    zope_i18n_allowed_languages it
    TZ Europe/Rome
    PHANTOMJS_BASE localhost:${buildout:client4-address}


############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl client1 client2 adduser".
user=admin:ZuHqr8agWSDY


############################################
# Parts Specification
# -------------------
# Specifies the components that should be included in the buildout.
# All the basics are in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts+=
    zeoserver
    client1 client2
    zopepy
    zopeskel
    unifiedinstaller
    backup
    chown-zeo
    test
    omelette
    supervisor


[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']

eggs =
    ${buildout:eggs}


[omelette]
recipe = collective.recipe.omelette
eggs = ${client1:eggs}

############################################
# Supervisor section
# ----------------------
# To make it easy to run both bin/plone and bin/zeo
#
[supervisor]
recipe = collective.recipe.supervisor
umask = 027

http-socket = unix
file = ${buildout:directory}/var/supervisord.socket

programs =
#   prio name   [(options)] command                                 [[args] [directory] [[redirect_stderr]] [user]]
    10    zeoserver          ${zeoserver:location}/bin/runzeo      ${zeoserver:location}
    20    client1            ${buildout:directory}/bin/client1     [console] true
    30    client2            ${buildout:directory}/bin/client2     [console] true
    40    client3            ${buildout:directory}/bin/client3     [console] true
    50    client4            ${buildout:directory}/bin/client4     [console] true
    10    haproxy            ${buildout:directory}/bin/haproxy     [ -f ${buildout:directory}/parts/etc/haproxy.conf -db ] true
    10    varnish ${buildout:directory}/bin/varnish [-F] .
# REMEMBER TO UPDATE THOSE VALUES IN ${buildout:environment-vars} too
# (we can't refactor those because of different syntax)
# Unfortunately it seems they MUST be on a single line
supervisord-environment = zope_i18n_compile_mo_files=true,PYTHON_EGG_CACHE=${buildout:directory}/var/.python-eggs,PYTHONHASHSEED=random,zope_i18n_allowed_languages=it,TZ=Europe/Rome,PHANTOMJS_BASE=localhost:${buildout:client4-address}

############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]
ZopeSkel = 2.21.2
Cheetah = 2.2.1
Pillow = 1.7.7


[sources]
Products.CMFPlomino = git https://github.com/robystar/Plomino.git
#Products.CMFPlomino = git https://github.com/plomino/Plomino.git
#collective.examples.userdata = git https://github.com/robystar/collective.examples.userdata.git
#plonetheme.bootstrap = git https://github.com/collective/plonetheme.bootstrap.git
gisweb.utils = git branch=cleaning https://github.com/gisweb/gisweb.utils.git 
gisweb.iol = git branch=plomino-1.19 https://github.com/gisweb/gisweb.iol.git
collective.wkpdfview = git git://github.com/silviot/collective.wkpdfview.git
iol.desktop = https://github.com/mamogmx/iol.desktop.git
